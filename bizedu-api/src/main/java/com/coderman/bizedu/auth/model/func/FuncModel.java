package com.coderman.bizedu.auth.model.func;

import com.coderman.api.model.BaseModel;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import lombok.Data;

import java.util.Date;
import java.util.Objects;

/**
 * This is the base record class for table: auth_func
 * Generated by MyBatis Generator.
 * @author MyBatis Generator
 */
@Data
@ApiModel(value="FuncModel", description = "auth_func 实体类")
public class FuncModel extends BaseModel {
    

    @ApiModelProperty(value = "主键")
    private Integer funcId;

    @ApiModelProperty(value = "功能名称")
    private String funcName;

    @ApiModelProperty(value = "功能key")
    private String funcKey;

    @ApiModelProperty(value = "功能类型(目录/功能)")
    private String funcType;

    @ApiModelProperty(value = "目录图标")
    private String funcIcon;

    @ApiModelProperty(value = "功能排序")
    private Integer funcSort;

    @ApiModelProperty(value = "是否隐藏")
    private String funcDirStatus;

    @ApiModelProperty(value = "父级功能id")
    private Integer parentId;

    @ApiModelProperty(value = "创建时间")
    private Date createTime;

    @ApiModelProperty(value = "更新时间")
    private Date updateTime;


    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;
        FuncModel funcModel = (FuncModel) o;
        return funcId.equals(funcModel.funcId) &&
                funcName.equals(funcModel.funcName) &&
                funcKey.equals(funcModel.funcKey) &&
                funcType.equals(funcModel.funcType) &&
                funcIcon.equals(funcModel.funcIcon) &&
                funcSort.equals(funcModel.funcSort) &&
                funcDirStatus.equals(funcModel.funcDirStatus) &&
                parentId.equals(funcModel.parentId) &&
                createTime.equals(funcModel.createTime) &&
                updateTime.equals(funcModel.updateTime);
    }

    @Override
    public int hashCode() {
        return Objects.hash(funcId, funcName, funcKey, funcType, funcIcon, funcSort, funcDirStatus, parentId, createTime, updateTime);
    }
}