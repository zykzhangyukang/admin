<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.coderman.admin.dao.user.UserFuncDAO">
  <resultMap id="BaseResultMap" type="com.coderman.admin.model.user.UserFuncModel">
    <id column="user_func_id" jdbcType="INTEGER" property="userFuncId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="func_id" jdbcType="INTEGER" property="funcId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    user_func_id, user_id, func_id
  </sql>
  <select id="selectByExample" parameterType="com.coderman.admin.model.user.UserFuncExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from auth_user_func
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from auth_user_func
    where user_func_id = #{userFuncId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from auth_user_func
    where user_func_id = #{userFuncId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.coderman.admin.model.user.UserFuncExample">
    delete from auth_user_func
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.coderman.admin.model.user.UserFuncModel">
    insert into auth_user_func (user_func_id, user_id, func_id
      )
    values (#{userFuncId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{funcId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.coderman.admin.model.user.UserFuncModel">
    insert into auth_user_func
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userFuncId != null">
        user_func_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="funcId != null">
        func_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userFuncId != null">
        #{userFuncId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="funcId != null">
        #{funcId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.coderman.admin.model.user.UserFuncExample" resultType="java.lang.Long">
    select count(*) from auth_user_func
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update auth_user_func
    <set>
      <if test="record.userFuncId != null">
        user_func_id = #{record.userFuncId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.funcId != null">
        func_id = #{record.funcId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update auth_user_func
    set user_func_id = #{record.userFuncId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      func_id = #{record.funcId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.coderman.admin.model.user.UserFuncModel">
    update auth_user_func
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="funcId != null">
        func_id = #{funcId,jdbcType=INTEGER},
      </if>
    </set>
    where user_func_id = #{userFuncId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.coderman.admin.model.user.UserFuncModel">
    update auth_user_func
    set user_id = #{userId,jdbcType=INTEGER},
      func_id = #{funcId,jdbcType=INTEGER}
    where user_func_id = #{userFuncId,jdbcType=INTEGER}
  </update>
  <delete id="deleteByUserId">
    delete from auth_user_func where user_id = #{userId}
  </delete>
  <insert id="insertBatchByUserId">
    insert into auth_user_func (user_id, func_id )
    values
    <foreach collection="funcIdList"  item="item"  separator=",">
      (#{userId,jdbcType=INTEGER}, #{item,jdbcType=INTEGER})
    </foreach>
  </insert>
</mapper>